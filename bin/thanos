#!/bin/bash

# Check location of global installation 
if [ -d "$HOME/.node/bin/" ]
then
	global="$HOME/.node";
else 
	global="/usr/local";
fi

# Detect if installed globally

if [ -e "$global/bin/thanos-path" ]
then
	path="local";

	lib=$(<$global/bin/thanos-path);
	bin="$(<$global/bin/thanos-path)/bin";
else 
	path="global";

	lib="$global/lib/node_modules/thanos";
	bin="$global/lib/node_modules/thanos/bin";
fi

param=$1;
param_2=$2;

function help {
	echo "";
	echo "Usage: thanos <command>";
	echo "";
	echo "where <command> is one of:";
	echo "      -h, --help                    general help/usage of thanos";
	echo "      -st, --setup                  sets up thanos (globally)";
	echo "      -st -u, --setup -u            sets up thanos default user only (globally)";
	echo "      -r, --run                     globally starts thanos project";
	echo "      -r -l, --run -l               globally starts thanos and log to a file";
	echo "      -s, --stop                    globally stops thanos project";
	echo "      -v, --version                 thanos version";
	echo "";
	echo "You don't have to setup thanos if you already have .thanos.json in your root user directory.";
	echo "";
	echo "$lib - project directory ($path)";
	echo "";
	echo "";
}

function setup {
	echo "";
	echo "-----------------------------";
	echo " please enter the following: ";
	echo "-----------------------------";
	echo "";

	cd $bin;

	if [[ $param_2 == '-u' ]]
	then
		echo "enter path to mongodb - including any credentials (ex: mongodb://localhost/thanos - for thanos data storage):";

		read path;
		db=`expr "$path" : '.*\(......\)'`;

		import(){
			mongoimport --upsert --db $db --collection users ../db/setup/users.json
			mongoimport --upsert --db $db --collection auths ../db/setup/auths.json
		}

		import;

		node ./setup.js $path $salt $account $key $secret $bucket $region $param_2
	else
		echo "8: enter port for thanos:";

		read port;

		echo "";
		echo "7: enter path to mongodb - including any credentials (ex: mongodb://localhost/thanos - for thanos data storage):";

		read path;
		db=`expr "$path" : '.*\(......\)'`;

		echo "";
		echo "6. enter random letter/number combination for salt - for encrypting sensitive information:";

		read salt;

		echo "";
		echo "5. enter AWS account id:";

		read account;

		echo "";
		echo "4. enter AWS access key id:";

		read key;

		echo "";
		echo "3. enter AWS secret access key:";

		read secret;

		echo "";
		echo "2. enter AWS bucket:";

		read bucket;

		echo "";
		echo "1. enter AWS region:";

		read region;

		import(){
			mongoimport --upsert --db $db --collection users ../db/setup/users.json
			mongoimport --upsert --db $db --collection auths ../db/setup/auths.json
		}

		import;

		node ./setup.js $port $path $salt $account $key $secret $bucket $region $param_2
	fi
}

function run {
	echo "";
	echo "-----------------";
	echo " starting thanos ";
	echo "-----------------";
	echo "";

	cd $lib;

	if [[ $param_2 ]]
	then
		exec node ./index.js . >> ./logs/thanos.log 2>&1 &

		nohup echo '';
	else 
		node ./index.js
	fi
}

function stop {
	echo "";
	echo "-----------------";
	echo " stopping thanos ";
	echo "-----------------";
	echo "";

	pkill node
}

function version {
	cd $lib;

	package_version=$(cat package.json \
		| grep version \
		| head -1 \
		| awk -F: '{ print $2 }' \
		| sed 's/[",]//g')

	echo $package_version
}

case "$param" in
	"")
		help;
    ;;
    -h)
		help;
    ;;
    --help)
		help;
    ;;
    -st)
		setup;
	;;
	--setup)
		setup;
	;;
	-r)
		run;
	;;
	--run)
		run;
	;;
	-s)
		stop;
	;;
	--stop)
		stop;
	;;
	-v)
		version;
	;;
	--version)
		version;
	;;
    *)
    	help;
    ;;
esac